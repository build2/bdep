// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace bdep
{
  // commands
  //

  inline const bool& commands::
  help () const
  {
    return this->help_;
  }

  inline bool& commands::
  help ()
  {
    return this->help_;
  }

  inline void commands::
  help (const bool& x)
  {
    this->help_ = x;
  }

  inline const bool& commands::
  new_ () const
  {
    return this->new__;
  }

  inline bool& commands::
  new_ ()
  {
    return this->new__;
  }

  inline void commands::
  new_ (const bool& x)
  {
    this->new__ = x;
  }

  inline const bool& commands::
  init () const
  {
    return this->init_;
  }

  inline bool& commands::
  init ()
  {
    return this->init_;
  }

  inline void commands::
  init (const bool& x)
  {
    this->init_ = x;
  }

  inline const bool& commands::
  sync () const
  {
    return this->sync_;
  }

  inline bool& commands::
  sync ()
  {
    return this->sync_;
  }

  inline void commands::
  sync (const bool& x)
  {
    this->sync_ = x;
  }

  inline const bool& commands::
  fetch () const
  {
    return this->fetch_;
  }

  inline bool& commands::
  fetch ()
  {
    return this->fetch_;
  }

  inline void commands::
  fetch (const bool& x)
  {
    this->fetch_ = x;
  }

  inline const bool& commands::
  status () const
  {
    return this->status_;
  }

  inline bool& commands::
  status ()
  {
    return this->status_;
  }

  inline void commands::
  status (const bool& x)
  {
    this->status_ = x;
  }

  inline const bool& commands::
  ci () const
  {
    return this->ci_;
  }

  inline bool& commands::
  ci ()
  {
    return this->ci_;
  }

  inline void commands::
  ci (const bool& x)
  {
    this->ci_ = x;
  }

  inline const bool& commands::
  release () const
  {
    return this->release_;
  }

  inline bool& commands::
  release ()
  {
    return this->release_;
  }

  inline void commands::
  release (const bool& x)
  {
    this->release_ = x;
  }

  inline const bool& commands::
  publish () const
  {
    return this->publish_;
  }

  inline bool& commands::
  publish ()
  {
    return this->publish_;
  }

  inline void commands::
  publish (const bool& x)
  {
    this->publish_ = x;
  }

  inline const bool& commands::
  deinit () const
  {
    return this->deinit_;
  }

  inline bool& commands::
  deinit ()
  {
    return this->deinit_;
  }

  inline void commands::
  deinit (const bool& x)
  {
    this->deinit_ = x;
  }

  inline const bool& commands::
  config () const
  {
    return this->config_;
  }

  inline bool& commands::
  config ()
  {
    return this->config_;
  }

  inline void commands::
  config (const bool& x)
  {
    this->config_ = x;
  }

  inline const bool& commands::
  test () const
  {
    return this->test_;
  }

  inline bool& commands::
  test ()
  {
    return this->test_;
  }

  inline void commands::
  test (const bool& x)
  {
    this->test_ = x;
  }

  inline const bool& commands::
  update () const
  {
    return this->update_;
  }

  inline bool& commands::
  update ()
  {
    return this->update_;
  }

  inline void commands::
  update (const bool& x)
  {
    this->update_ = x;
  }

  inline const bool& commands::
  clean () const
  {
    return this->clean_;
  }

  inline bool& commands::
  clean ()
  {
    return this->clean_;
  }

  inline void commands::
  clean (const bool& x)
  {
    this->clean_ = x;
  }

  // topics
  //

  inline const bool& topics::
  common_options () const
  {
    return this->common_options_;
  }

  inline bool& topics::
  common_options ()
  {
    return this->common_options_;
  }

  inline void topics::
  common_options (const bool& x)
  {
    this->common_options_ = x;
  }

  inline const bool& topics::
  projects_configs () const
  {
    return this->projects_configs_;
  }

  inline bool& topics::
  projects_configs ()
  {
    return this->projects_configs_;
  }

  inline void topics::
  projects_configs (const bool& x)
  {
    this->projects_configs_ = x;
  }

  inline const bool& topics::
  default_options_files () const
  {
    return this->default_options_files_;
  }

  inline bool& topics::
  default_options_files ()
  {
    return this->default_options_files_;
  }

  inline void topics::
  default_options_files (const bool& x)
  {
    this->default_options_files_ = x;
  }

  inline const bool& topics::
  argument_grouping () const
  {
    return this->argument_grouping_;
  }

  inline bool& topics::
  argument_grouping ()
  {
    return this->argument_grouping_;
  }

  inline void topics::
  argument_grouping (const bool& x)
  {
    this->argument_grouping_ = x;
  }

  // options
  //

  inline const bool& options::
  help () const
  {
    return this->help_;
  }

  inline bool& options::
  help ()
  {
    return this->help_;
  }

  inline void options::
  help (const bool& x)
  {
    this->help_ = x;
  }

  inline const bool& options::
  version () const
  {
    return this->version_;
  }

  inline bool& options::
  version ()
  {
    return this->version_;
  }

  inline void options::
  version (const bool& x)
  {
    this->version_ = x;
  }
}

// Begin epilogue.
//
//
// End epilogue.
