// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace bdep
{
  // cmd_release_options
  //

  inline const bool& cmd_release_options::
  revision () const
  {
    return this->revision_;
  }

  inline bool& cmd_release_options::
  revision ()
  {
    return this->revision_;
  }

  inline void cmd_release_options::
  revision (const bool& x)
  {
    this->revision_ = x;
  }

  inline const bool& cmd_release_options::
  no_commit () const
  {
    return this->no_commit_;
  }

  inline bool& cmd_release_options::
  no_commit ()
  {
    return this->no_commit_;
  }

  inline void cmd_release_options::
  no_commit (const bool& x)
  {
    this->no_commit_ = x;
  }

  inline const bool& cmd_release_options::
  no_tag () const
  {
    return this->no_tag_;
  }

  inline bool& cmd_release_options::
  no_tag ()
  {
    return this->no_tag_;
  }

  inline void cmd_release_options::
  no_tag (const bool& x)
  {
    this->no_tag_ = x;
  }

  inline const bool& cmd_release_options::
  tag () const
  {
    return this->tag_;
  }

  inline bool& cmd_release_options::
  tag ()
  {
    return this->tag_;
  }

  inline void cmd_release_options::
  tag (const bool& x)
  {
    this->tag_ = x;
  }

  inline const cmd_release_current_tag& cmd_release_options::
  current_tag () const
  {
    return this->current_tag_;
  }

  inline cmd_release_current_tag& cmd_release_options::
  current_tag ()
  {
    return this->current_tag_;
  }

  inline void cmd_release_options::
  current_tag (const cmd_release_current_tag& x)
  {
    this->current_tag_ = x;
  }

  inline bool cmd_release_options::
  current_tag_specified () const
  {
    return this->current_tag_specified_;
  }

  inline void cmd_release_options::
  current_tag_specified (bool x)
  {
    this->current_tag_specified_ = x;
  }

  inline const bool& cmd_release_options::
  push () const
  {
    return this->push_;
  }

  inline bool& cmd_release_options::
  push ()
  {
    return this->push_;
  }

  inline void cmd_release_options::
  push (const bool& x)
  {
    this->push_ = x;
  }

  inline const bool& cmd_release_options::
  show_push () const
  {
    return this->show_push_;
  }

  inline bool& cmd_release_options::
  show_push ()
  {
    return this->show_push_;
  }

  inline void cmd_release_options::
  show_push (const bool& x)
  {
    this->show_push_ = x;
  }

  inline const bool& cmd_release_options::
  no_open () const
  {
    return this->no_open_;
  }

  inline bool& cmd_release_options::
  no_open ()
  {
    return this->no_open_;
  }

  inline void cmd_release_options::
  no_open (const bool& x)
  {
    this->no_open_ = x;
  }

  inline const bool& cmd_release_options::
  open () const
  {
    return this->open_;
  }

  inline bool& cmd_release_options::
  open ()
  {
    return this->open_;
  }

  inline void cmd_release_options::
  open (const bool& x)
  {
    this->open_ = x;
  }

  inline const bool& cmd_release_options::
  amend () const
  {
    return this->amend_;
  }

  inline bool& cmd_release_options::
  amend ()
  {
    return this->amend_;
  }

  inline void cmd_release_options::
  amend (const bool& x)
  {
    this->amend_ = x;
  }

  inline const size_t& cmd_release_options::
  squash () const
  {
    return this->squash_;
  }

  inline size_t& cmd_release_options::
  squash ()
  {
    return this->squash_;
  }

  inline void cmd_release_options::
  squash (const size_t& x)
  {
    this->squash_ = x;
  }

  inline bool cmd_release_options::
  squash_specified () const
  {
    return this->squash_specified_;
  }

  inline void cmd_release_options::
  squash_specified (bool x)
  {
    this->squash_specified_ = x;
  }

  inline const bool& cmd_release_options::
  alpha () const
  {
    return this->alpha_;
  }

  inline bool& cmd_release_options::
  alpha ()
  {
    return this->alpha_;
  }

  inline void cmd_release_options::
  alpha (const bool& x)
  {
    this->alpha_ = x;
  }

  inline const bool& cmd_release_options::
  beta () const
  {
    return this->beta_;
  }

  inline bool& cmd_release_options::
  beta ()
  {
    return this->beta_;
  }

  inline void cmd_release_options::
  beta (const bool& x)
  {
    this->beta_ = x;
  }

  inline const bool& cmd_release_options::
  minor () const
  {
    return this->minor_;
  }

  inline bool& cmd_release_options::
  minor ()
  {
    return this->minor_;
  }

  inline void cmd_release_options::
  minor (const bool& x)
  {
    this->minor_ = x;
  }

  inline const bool& cmd_release_options::
  major () const
  {
    return this->major_;
  }

  inline bool& cmd_release_options::
  major ()
  {
    return this->major_;
  }

  inline void cmd_release_options::
  major (const bool& x)
  {
    this->major_ = x;
  }

  inline const bool& cmd_release_options::
  open_beta () const
  {
    return this->open_beta_;
  }

  inline bool& cmd_release_options::
  open_beta ()
  {
    return this->open_beta_;
  }

  inline void cmd_release_options::
  open_beta (const bool& x)
  {
    this->open_beta_ = x;
  }

  inline const bool& cmd_release_options::
  open_patch () const
  {
    return this->open_patch_;
  }

  inline bool& cmd_release_options::
  open_patch ()
  {
    return this->open_patch_;
  }

  inline void cmd_release_options::
  open_patch (const bool& x)
  {
    this->open_patch_ = x;
  }

  inline const bool& cmd_release_options::
  open_minor () const
  {
    return this->open_minor_;
  }

  inline bool& cmd_release_options::
  open_minor ()
  {
    return this->open_minor_;
  }

  inline void cmd_release_options::
  open_minor (const bool& x)
  {
    this->open_minor_ = x;
  }

  inline const bool& cmd_release_options::
  open_major () const
  {
    return this->open_major_;
  }

  inline bool& cmd_release_options::
  open_major ()
  {
    return this->open_major_;
  }

  inline void cmd_release_options::
  open_major (const bool& x)
  {
    this->open_major_ = x;
  }

  inline const string& cmd_release_options::
  open_base () const
  {
    return this->open_base_;
  }

  inline string& cmd_release_options::
  open_base ()
  {
    return this->open_base_;
  }

  inline void cmd_release_options::
  open_base (const string& x)
  {
    this->open_base_ = x;
  }

  inline bool cmd_release_options::
  open_base_specified () const
  {
    return this->open_base_specified_;
  }

  inline void cmd_release_options::
  open_base_specified (bool x)
  {
    this->open_base_specified_ = x;
  }

  inline const bool& cmd_release_options::
  edit () const
  {
    return this->edit_;
  }

  inline bool& cmd_release_options::
  edit ()
  {
    return this->edit_;
  }

  inline void cmd_release_options::
  edit (const bool& x)
  {
    this->edit_ = x;
  }

  inline const bool& cmd_release_options::
  no_edit () const
  {
    return this->no_edit_;
  }

  inline bool& cmd_release_options::
  no_edit ()
  {
    return this->no_edit_;
  }

  inline void cmd_release_options::
  no_edit (const bool& x)
  {
    this->no_edit_ = x;
  }

  inline const std::set<string>& cmd_release_options::
  force () const
  {
    return this->force_;
  }

  inline std::set<string>& cmd_release_options::
  force ()
  {
    return this->force_;
  }

  inline void cmd_release_options::
  force (const std::set<string>& x)
  {
    this->force_ = x;
  }

  inline bool cmd_release_options::
  force_specified () const
  {
    return this->force_specified_;
  }

  inline void cmd_release_options::
  force_specified (bool x)
  {
    this->force_specified_ = x;
  }

  inline const bool& cmd_release_options::
  yes () const
  {
    return this->yes_;
  }

  inline bool& cmd_release_options::
  yes ()
  {
    return this->yes_;
  }

  inline void cmd_release_options::
  yes (const bool& x)
  {
    this->yes_ = x;
  }

  inline const dir_paths& cmd_release_options::
  directory () const
  {
    return this->directory_;
  }

  inline dir_paths& cmd_release_options::
  directory ()
  {
    return this->directory_;
  }

  inline void cmd_release_options::
  directory (const dir_paths& x)
  {
    this->directory_ = x;
  }

  inline bool cmd_release_options::
  directory_specified () const
  {
    return this->directory_specified_;
  }

  inline void cmd_release_options::
  directory_specified (bool x)
  {
    this->directory_specified_ = x;
  }
}

// Begin epilogue.
//
//
// End epilogue.
