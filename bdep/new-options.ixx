// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace bdep
{
  // cmd_new_c_options
  //

  inline const bool& cmd_new_c_options::
  cpp () const
  {
    return this->cpp_;
  }

  inline bool& cmd_new_c_options::
  cpp ()
  {
    return this->cpp_;
  }

  inline void cmd_new_c_options::
  cpp (const bool& x)
  {
    this->cpp_ = x;
  }

  inline const string& cmd_new_c_options::
  hxx () const
  {
    return this->hxx_;
  }

  inline string& cmd_new_c_options::
  hxx ()
  {
    return this->hxx_;
  }

  inline void cmd_new_c_options::
  hxx (const string& x)
  {
    this->hxx_ = x;
  }

  inline bool cmd_new_c_options::
  hxx_specified () const
  {
    return this->hxx_specified_;
  }

  inline void cmd_new_c_options::
  hxx_specified (bool x)
  {
    this->hxx_specified_ = x;
  }

  inline const string& cmd_new_c_options::
  cxx () const
  {
    return this->cxx_;
  }

  inline string& cmd_new_c_options::
  cxx ()
  {
    return this->cxx_;
  }

  inline void cmd_new_c_options::
  cxx (const string& x)
  {
    this->cxx_ = x;
  }

  inline bool cmd_new_c_options::
  cxx_specified () const
  {
    return this->cxx_specified_;
  }

  inline void cmd_new_c_options::
  cxx_specified (bool x)
  {
    this->cxx_specified_ = x;
  }

  inline const string& cmd_new_c_options::
  ixx () const
  {
    return this->ixx_;
  }

  inline string& cmd_new_c_options::
  ixx ()
  {
    return this->ixx_;
  }

  inline void cmd_new_c_options::
  ixx (const string& x)
  {
    this->ixx_ = x;
  }

  inline bool cmd_new_c_options::
  ixx_specified () const
  {
    return this->ixx_specified_;
  }

  inline void cmd_new_c_options::
  ixx_specified (bool x)
  {
    this->ixx_specified_ = x;
  }

  inline const string& cmd_new_c_options::
  txx () const
  {
    return this->txx_;
  }

  inline string& cmd_new_c_options::
  txx ()
  {
    return this->txx_;
  }

  inline void cmd_new_c_options::
  txx (const string& x)
  {
    this->txx_ = x;
  }

  inline bool cmd_new_c_options::
  txx_specified () const
  {
    return this->txx_specified_;
  }

  inline void cmd_new_c_options::
  txx_specified (bool x)
  {
    this->txx_specified_ = x;
  }

  inline const string& cmd_new_c_options::
  mxx () const
  {
    return this->mxx_;
  }

  inline string& cmd_new_c_options::
  mxx ()
  {
    return this->mxx_;
  }

  inline void cmd_new_c_options::
  mxx (const string& x)
  {
    this->mxx_ = x;
  }

  inline bool cmd_new_c_options::
  mxx_specified () const
  {
    return this->mxx_specified_;
  }

  inline void cmd_new_c_options::
  mxx_specified (bool x)
  {
    this->mxx_specified_ = x;
  }

  // cmd_new_cxx_options
  //

  inline const bool& cmd_new_cxx_options::
  cpp () const
  {
    return this->cpp_;
  }

  inline bool& cmd_new_cxx_options::
  cpp ()
  {
    return this->cpp_;
  }

  inline void cmd_new_cxx_options::
  cpp (const bool& x)
  {
    this->cpp_ = x;
  }

  inline const string& cmd_new_cxx_options::
  extension () const
  {
    return this->extension_;
  }

  inline string& cmd_new_cxx_options::
  extension ()
  {
    return this->extension_;
  }

  inline void cmd_new_cxx_options::
  extension (const string& x)
  {
    this->extension_ = x;
  }

  inline bool cmd_new_cxx_options::
  extension_specified () const
  {
    return this->extension_specified_;
  }

  inline void cmd_new_cxx_options::
  extension_specified (bool x)
  {
    this->extension_specified_ = x;
  }

  inline const string& cmd_new_cxx_options::
  hxx () const
  {
    return this->hxx_;
  }

  inline string& cmd_new_cxx_options::
  hxx ()
  {
    return this->hxx_;
  }

  inline void cmd_new_cxx_options::
  hxx (const string& x)
  {
    this->hxx_ = x;
  }

  inline bool cmd_new_cxx_options::
  hxx_specified () const
  {
    return this->hxx_specified_;
  }

  inline void cmd_new_cxx_options::
  hxx_specified (bool x)
  {
    this->hxx_specified_ = x;
  }

  inline const string& cmd_new_cxx_options::
  cxx () const
  {
    return this->cxx_;
  }

  inline string& cmd_new_cxx_options::
  cxx ()
  {
    return this->cxx_;
  }

  inline void cmd_new_cxx_options::
  cxx (const string& x)
  {
    this->cxx_ = x;
  }

  inline bool cmd_new_cxx_options::
  cxx_specified () const
  {
    return this->cxx_specified_;
  }

  inline void cmd_new_cxx_options::
  cxx_specified (bool x)
  {
    this->cxx_specified_ = x;
  }

  inline const string& cmd_new_cxx_options::
  ixx () const
  {
    return this->ixx_;
  }

  inline string& cmd_new_cxx_options::
  ixx ()
  {
    return this->ixx_;
  }

  inline void cmd_new_cxx_options::
  ixx (const string& x)
  {
    this->ixx_ = x;
  }

  inline bool cmd_new_cxx_options::
  ixx_specified () const
  {
    return this->ixx_specified_;
  }

  inline void cmd_new_cxx_options::
  ixx_specified (bool x)
  {
    this->ixx_specified_ = x;
  }

  inline const string& cmd_new_cxx_options::
  txx () const
  {
    return this->txx_;
  }

  inline string& cmd_new_cxx_options::
  txx ()
  {
    return this->txx_;
  }

  inline void cmd_new_cxx_options::
  txx (const string& x)
  {
    this->txx_ = x;
  }

  inline bool cmd_new_cxx_options::
  txx_specified () const
  {
    return this->txx_specified_;
  }

  inline void cmd_new_cxx_options::
  txx_specified (bool x)
  {
    this->txx_specified_ = x;
  }

  inline const string& cmd_new_cxx_options::
  mxx () const
  {
    return this->mxx_;
  }

  inline string& cmd_new_cxx_options::
  mxx ()
  {
    return this->mxx_;
  }

  inline void cmd_new_cxx_options::
  mxx (const string& x)
  {
    this->mxx_ = x;
  }

  inline bool cmd_new_cxx_options::
  mxx_specified () const
  {
    return this->mxx_specified_;
  }

  inline void cmd_new_cxx_options::
  mxx_specified (bool x)
  {
    this->mxx_specified_ = x;
  }

  inline const bool& cmd_new_cxx_options::
  c () const
  {
    return this->c_;
  }

  inline bool& cmd_new_cxx_options::
  c ()
  {
    return this->c_;
  }

  inline void cmd_new_cxx_options::
  c (const bool& x)
  {
    this->c_ = x;
  }

  // cmd_new_exe_options
  //

  inline const bool& cmd_new_exe_options::
  no_tests () const
  {
    return this->no_tests_;
  }

  inline bool& cmd_new_exe_options::
  no_tests ()
  {
    return this->no_tests_;
  }

  inline void cmd_new_exe_options::
  no_tests (const bool& x)
  {
    this->no_tests_ = x;
  }

  inline const bool& cmd_new_exe_options::
  unit_tests () const
  {
    return this->unit_tests_;
  }

  inline bool& cmd_new_exe_options::
  unit_tests ()
  {
    return this->unit_tests_;
  }

  inline void cmd_new_exe_options::
  unit_tests (const bool& x)
  {
    this->unit_tests_ = x;
  }

  inline const bool& cmd_new_exe_options::
  no_install () const
  {
    return this->no_install_;
  }

  inline bool& cmd_new_exe_options::
  no_install ()
  {
    return this->no_install_;
  }

  inline void cmd_new_exe_options::
  no_install (const bool& x)
  {
    this->no_install_ = x;
  }

  inline const bool& cmd_new_exe_options::
  export_stub () const
  {
    return this->export_stub_;
  }

  inline bool& cmd_new_exe_options::
  export_stub ()
  {
    return this->export_stub_;
  }

  inline void cmd_new_exe_options::
  export_stub (const bool& x)
  {
    this->export_stub_ = x;
  }

  inline const dir_path& cmd_new_exe_options::
  prefix () const
  {
    return this->prefix_;
  }

  inline dir_path& cmd_new_exe_options::
  prefix ()
  {
    return this->prefix_;
  }

  inline void cmd_new_exe_options::
  prefix (const dir_path& x)
  {
    this->prefix_ = x;
  }

  inline bool cmd_new_exe_options::
  prefix_specified () const
  {
    return this->prefix_specified_;
  }

  inline void cmd_new_exe_options::
  prefix_specified (bool x)
  {
    this->prefix_specified_ = x;
  }

  inline const dir_path& cmd_new_exe_options::
  subdir () const
  {
    return this->subdir_;
  }

  inline dir_path& cmd_new_exe_options::
  subdir ()
  {
    return this->subdir_;
  }

  inline void cmd_new_exe_options::
  subdir (const dir_path& x)
  {
    this->subdir_ = x;
  }

  inline bool cmd_new_exe_options::
  subdir_specified () const
  {
    return this->subdir_specified_;
  }

  inline void cmd_new_exe_options::
  subdir_specified (bool x)
  {
    this->subdir_specified_ = x;
  }

  inline const bool& cmd_new_exe_options::
  no_subdir () const
  {
    return this->no_subdir_;
  }

  inline bool& cmd_new_exe_options::
  no_subdir ()
  {
    return this->no_subdir_;
  }

  inline void cmd_new_exe_options::
  no_subdir (const bool& x)
  {
    this->no_subdir_ = x;
  }

  inline const bool& cmd_new_exe_options::
  buildfile_in_prefix () const
  {
    return this->buildfile_in_prefix_;
  }

  inline bool& cmd_new_exe_options::
  buildfile_in_prefix ()
  {
    return this->buildfile_in_prefix_;
  }

  inline void cmd_new_exe_options::
  buildfile_in_prefix (const bool& x)
  {
    this->buildfile_in_prefix_ = x;
  }

  inline const bool& cmd_new_exe_options::
  third_party () const
  {
    return this->third_party_;
  }

  inline bool& cmd_new_exe_options::
  third_party ()
  {
    return this->third_party_;
  }

  inline void cmd_new_exe_options::
  third_party (const bool& x)
  {
    this->third_party_ = x;
  }

  inline const string& cmd_new_exe_options::
  license () const
  {
    return this->license_;
  }

  inline string& cmd_new_exe_options::
  license ()
  {
    return this->license_;
  }

  inline void cmd_new_exe_options::
  license (const string& x)
  {
    this->license_ = x;
  }

  inline bool cmd_new_exe_options::
  license_specified () const
  {
    return this->license_specified_;
  }

  inline void cmd_new_exe_options::
  license_specified (bool x)
  {
    this->license_specified_ = x;
  }

  inline const bool& cmd_new_exe_options::
  no_readme () const
  {
    return this->no_readme_;
  }

  inline bool& cmd_new_exe_options::
  no_readme ()
  {
    return this->no_readme_;
  }

  inline void cmd_new_exe_options::
  no_readme (const bool& x)
  {
    this->no_readme_ = x;
  }

  inline const bool& cmd_new_exe_options::
  no_package_readme () const
  {
    return this->no_package_readme_;
  }

  inline bool& cmd_new_exe_options::
  no_package_readme ()
  {
    return this->no_package_readme_;
  }

  inline void cmd_new_exe_options::
  no_package_readme (const bool& x)
  {
    this->no_package_readme_ = x;
  }

  inline const bool& cmd_new_exe_options::
  alt_naming () const
  {
    return this->alt_naming_;
  }

  inline bool& cmd_new_exe_options::
  alt_naming ()
  {
    return this->alt_naming_;
  }

  inline void cmd_new_exe_options::
  alt_naming (const bool& x)
  {
    this->alt_naming_ = x;
  }

  // cmd_new_lib_options
  //

  inline const bool& cmd_new_lib_options::
  binless () const
  {
    return this->binless_;
  }

  inline bool& cmd_new_lib_options::
  binless ()
  {
    return this->binless_;
  }

  inline void cmd_new_lib_options::
  binless (const bool& x)
  {
    this->binless_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_tests () const
  {
    return this->no_tests_;
  }

  inline bool& cmd_new_lib_options::
  no_tests ()
  {
    return this->no_tests_;
  }

  inline void cmd_new_lib_options::
  no_tests (const bool& x)
  {
    this->no_tests_ = x;
  }

  inline const bool& cmd_new_lib_options::
  unit_tests () const
  {
    return this->unit_tests_;
  }

  inline bool& cmd_new_lib_options::
  unit_tests ()
  {
    return this->unit_tests_;
  }

  inline void cmd_new_lib_options::
  unit_tests (const bool& x)
  {
    this->unit_tests_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_install () const
  {
    return this->no_install_;
  }

  inline bool& cmd_new_lib_options::
  no_install ()
  {
    return this->no_install_;
  }

  inline void cmd_new_lib_options::
  no_install (const bool& x)
  {
    this->no_install_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_version () const
  {
    return this->no_version_;
  }

  inline bool& cmd_new_lib_options::
  no_version ()
  {
    return this->no_version_;
  }

  inline void cmd_new_lib_options::
  no_version (const bool& x)
  {
    this->no_version_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_symexport () const
  {
    return this->no_symexport_;
  }

  inline bool& cmd_new_lib_options::
  no_symexport ()
  {
    return this->no_symexport_;
  }

  inline void cmd_new_lib_options::
  no_symexport (const bool& x)
  {
    this->no_symexport_ = x;
  }

  inline const bool& cmd_new_lib_options::
  auto_symexport () const
  {
    return this->auto_symexport_;
  }

  inline bool& cmd_new_lib_options::
  auto_symexport ()
  {
    return this->auto_symexport_;
  }

  inline void cmd_new_lib_options::
  auto_symexport (const bool& x)
  {
    this->auto_symexport_ = x;
  }

  inline const dir_path& cmd_new_lib_options::
  prefix_include () const
  {
    return this->prefix_include_;
  }

  inline dir_path& cmd_new_lib_options::
  prefix_include ()
  {
    return this->prefix_include_;
  }

  inline void cmd_new_lib_options::
  prefix_include (const dir_path& x)
  {
    this->prefix_include_ = x;
  }

  inline bool cmd_new_lib_options::
  prefix_include_specified () const
  {
    return this->prefix_include_specified_;
  }

  inline void cmd_new_lib_options::
  prefix_include_specified (bool x)
  {
    this->prefix_include_specified_ = x;
  }

  inline const dir_path& cmd_new_lib_options::
  prefix_source () const
  {
    return this->prefix_source_;
  }

  inline dir_path& cmd_new_lib_options::
  prefix_source ()
  {
    return this->prefix_source_;
  }

  inline void cmd_new_lib_options::
  prefix_source (const dir_path& x)
  {
    this->prefix_source_ = x;
  }

  inline bool cmd_new_lib_options::
  prefix_source_specified () const
  {
    return this->prefix_source_specified_;
  }

  inline void cmd_new_lib_options::
  prefix_source_specified (bool x)
  {
    this->prefix_source_specified_ = x;
  }

  inline const dir_path& cmd_new_lib_options::
  prefix () const
  {
    return this->prefix_;
  }

  inline dir_path& cmd_new_lib_options::
  prefix ()
  {
    return this->prefix_;
  }

  inline void cmd_new_lib_options::
  prefix (const dir_path& x)
  {
    this->prefix_ = x;
  }

  inline bool cmd_new_lib_options::
  prefix_specified () const
  {
    return this->prefix_specified_;
  }

  inline void cmd_new_lib_options::
  prefix_specified (bool x)
  {
    this->prefix_specified_ = x;
  }

  inline const bool& cmd_new_lib_options::
  split () const
  {
    return this->split_;
  }

  inline bool& cmd_new_lib_options::
  split ()
  {
    return this->split_;
  }

  inline void cmd_new_lib_options::
  split (const bool& x)
  {
    this->split_ = x;
  }

  inline const dir_path& cmd_new_lib_options::
  subdir () const
  {
    return this->subdir_;
  }

  inline dir_path& cmd_new_lib_options::
  subdir ()
  {
    return this->subdir_;
  }

  inline void cmd_new_lib_options::
  subdir (const dir_path& x)
  {
    this->subdir_ = x;
  }

  inline bool cmd_new_lib_options::
  subdir_specified () const
  {
    return this->subdir_specified_;
  }

  inline void cmd_new_lib_options::
  subdir_specified (bool x)
  {
    this->subdir_specified_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_subdir_include () const
  {
    return this->no_subdir_include_;
  }

  inline bool& cmd_new_lib_options::
  no_subdir_include ()
  {
    return this->no_subdir_include_;
  }

  inline void cmd_new_lib_options::
  no_subdir_include (const bool& x)
  {
    this->no_subdir_include_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_subdir_source () const
  {
    return this->no_subdir_source_;
  }

  inline bool& cmd_new_lib_options::
  no_subdir_source ()
  {
    return this->no_subdir_source_;
  }

  inline void cmd_new_lib_options::
  no_subdir_source (const bool& x)
  {
    this->no_subdir_source_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_subdir () const
  {
    return this->no_subdir_;
  }

  inline bool& cmd_new_lib_options::
  no_subdir ()
  {
    return this->no_subdir_;
  }

  inline void cmd_new_lib_options::
  no_subdir (const bool& x)
  {
    this->no_subdir_ = x;
  }

  inline const bool& cmd_new_lib_options::
  buildfile_in_prefix () const
  {
    return this->buildfile_in_prefix_;
  }

  inline bool& cmd_new_lib_options::
  buildfile_in_prefix ()
  {
    return this->buildfile_in_prefix_;
  }

  inline void cmd_new_lib_options::
  buildfile_in_prefix (const bool& x)
  {
    this->buildfile_in_prefix_ = x;
  }

  inline const bool& cmd_new_lib_options::
  third_party () const
  {
    return this->third_party_;
  }

  inline bool& cmd_new_lib_options::
  third_party ()
  {
    return this->third_party_;
  }

  inline void cmd_new_lib_options::
  third_party (const bool& x)
  {
    this->third_party_ = x;
  }

  inline const string& cmd_new_lib_options::
  license () const
  {
    return this->license_;
  }

  inline string& cmd_new_lib_options::
  license ()
  {
    return this->license_;
  }

  inline void cmd_new_lib_options::
  license (const string& x)
  {
    this->license_ = x;
  }

  inline bool cmd_new_lib_options::
  license_specified () const
  {
    return this->license_specified_;
  }

  inline void cmd_new_lib_options::
  license_specified (bool x)
  {
    this->license_specified_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_readme () const
  {
    return this->no_readme_;
  }

  inline bool& cmd_new_lib_options::
  no_readme ()
  {
    return this->no_readme_;
  }

  inline void cmd_new_lib_options::
  no_readme (const bool& x)
  {
    this->no_readme_ = x;
  }

  inline const bool& cmd_new_lib_options::
  no_package_readme () const
  {
    return this->no_package_readme_;
  }

  inline bool& cmd_new_lib_options::
  no_package_readme ()
  {
    return this->no_package_readme_;
  }

  inline void cmd_new_lib_options::
  no_package_readme (const bool& x)
  {
    this->no_package_readme_ = x;
  }

  inline const bool& cmd_new_lib_options::
  alt_naming () const
  {
    return this->alt_naming_;
  }

  inline bool& cmd_new_lib_options::
  alt_naming ()
  {
    return this->alt_naming_;
  }

  inline void cmd_new_lib_options::
  alt_naming (const bool& x)
  {
    this->alt_naming_ = x;
  }

  // cmd_new_bare_options
  //

  inline const bool& cmd_new_bare_options::
  no_tests () const
  {
    return this->no_tests_;
  }

  inline bool& cmd_new_bare_options::
  no_tests ()
  {
    return this->no_tests_;
  }

  inline void cmd_new_bare_options::
  no_tests (const bool& x)
  {
    this->no_tests_ = x;
  }

  inline const bool& cmd_new_bare_options::
  no_install () const
  {
    return this->no_install_;
  }

  inline bool& cmd_new_bare_options::
  no_install ()
  {
    return this->no_install_;
  }

  inline void cmd_new_bare_options::
  no_install (const bool& x)
  {
    this->no_install_ = x;
  }

  inline const string& cmd_new_bare_options::
  license () const
  {
    return this->license_;
  }

  inline string& cmd_new_bare_options::
  license ()
  {
    return this->license_;
  }

  inline void cmd_new_bare_options::
  license (const string& x)
  {
    this->license_ = x;
  }

  inline bool cmd_new_bare_options::
  license_specified () const
  {
    return this->license_specified_;
  }

  inline void cmd_new_bare_options::
  license_specified (bool x)
  {
    this->license_specified_ = x;
  }

  inline const bool& cmd_new_bare_options::
  no_readme () const
  {
    return this->no_readme_;
  }

  inline bool& cmd_new_bare_options::
  no_readme ()
  {
    return this->no_readme_;
  }

  inline void cmd_new_bare_options::
  no_readme (const bool& x)
  {
    this->no_readme_ = x;
  }

  inline const bool& cmd_new_bare_options::
  alt_naming () const
  {
    return this->alt_naming_;
  }

  inline bool& cmd_new_bare_options::
  alt_naming ()
  {
    return this->alt_naming_;
  }

  inline void cmd_new_bare_options::
  alt_naming (const bool& x)
  {
    this->alt_naming_ = x;
  }

  // cmd_new_empty_options
  //

  inline const bool& cmd_new_empty_options::
  third_party () const
  {
    return this->third_party_;
  }

  inline bool& cmd_new_empty_options::
  third_party ()
  {
    return this->third_party_;
  }

  inline void cmd_new_empty_options::
  third_party (const bool& x)
  {
    this->third_party_ = x;
  }

  inline const bool& cmd_new_empty_options::
  no_readme () const
  {
    return this->no_readme_;
  }

  inline bool& cmd_new_empty_options::
  no_readme ()
  {
    return this->no_readme_;
  }

  inline void cmd_new_empty_options::
  no_readme (const bool& x)
  {
    this->no_readme_ = x;
  }

  // cmd_new_git_options
  //

  inline const string& cmd_new_git_options::
  branch () const
  {
    return this->branch_;
  }

  inline string& cmd_new_git_options::
  branch ()
  {
    return this->branch_;
  }

  inline void cmd_new_git_options::
  branch (const string& x)
  {
    this->branch_ = x;
  }

  inline bool cmd_new_git_options::
  branch_specified () const
  {
    return this->branch_specified_;
  }

  inline void cmd_new_git_options::
  branch_specified (bool x)
  {
    this->branch_specified_ = x;
  }

  // cmd_new_none_options
  //

  // cmd_new_options
  //

  inline const bool& cmd_new_options::
  no_init () const
  {
    return this->no_init_;
  }

  inline bool& cmd_new_options::
  no_init ()
  {
    return this->no_init_;
  }

  inline void cmd_new_options::
  no_init (const bool& x)
  {
    this->no_init_ = x;
  }

  inline const bool& cmd_new_options::
  package () const
  {
    return this->package_;
  }

  inline bool& cmd_new_options::
  package ()
  {
    return this->package_;
  }

  inline void cmd_new_options::
  package (const bool& x)
  {
    this->package_ = x;
  }

  inline const bool& cmd_new_options::
  source () const
  {
    return this->source_;
  }

  inline bool& cmd_new_options::
  source ()
  {
    return this->source_;
  }

  inline void cmd_new_options::
  source (const bool& x)
  {
    this->source_ = x;
  }

  inline const dir_path& cmd_new_options::
  output_dir () const
  {
    return this->output_dir_;
  }

  inline dir_path& cmd_new_options::
  output_dir ()
  {
    return this->output_dir_;
  }

  inline void cmd_new_options::
  output_dir (const dir_path& x)
  {
    this->output_dir_ = x;
  }

  inline bool cmd_new_options::
  output_dir_specified () const
  {
    return this->output_dir_specified_;
  }

  inline void cmd_new_options::
  output_dir_specified (bool x)
  {
    this->output_dir_specified_ = x;
  }

  inline const dir_path& cmd_new_options::
  directory () const
  {
    return this->directory_;
  }

  inline dir_path& cmd_new_options::
  directory ()
  {
    return this->directory_;
  }

  inline void cmd_new_options::
  directory (const dir_path& x)
  {
    this->directory_ = x;
  }

  inline bool cmd_new_options::
  directory_specified () const
  {
    return this->directory_specified_;
  }

  inline void cmd_new_options::
  directory_specified (bool x)
  {
    this->directory_specified_ = x;
  }

  inline const cmd_new_type& cmd_new_options::
  type () const
  {
    return this->type_;
  }

  inline cmd_new_type& cmd_new_options::
  type ()
  {
    return this->type_;
  }

  inline void cmd_new_options::
  type (const cmd_new_type& x)
  {
    this->type_ = x;
  }

  inline bool cmd_new_options::
  type_specified () const
  {
    return this->type_specified_;
  }

  inline void cmd_new_options::
  type_specified (bool x)
  {
    this->type_specified_ = x;
  }

  inline const cmd_new_lang& cmd_new_options::
  lang () const
  {
    return this->lang_;
  }

  inline cmd_new_lang& cmd_new_options::
  lang ()
  {
    return this->lang_;
  }

  inline void cmd_new_options::
  lang (const cmd_new_lang& x)
  {
    this->lang_ = x;
  }

  inline bool cmd_new_options::
  lang_specified () const
  {
    return this->lang_specified_;
  }

  inline void cmd_new_options::
  lang_specified (bool x)
  {
    this->lang_specified_ = x;
  }

  inline const cmd_new_vcs& cmd_new_options::
  vcs () const
  {
    return this->vcs_;
  }

  inline cmd_new_vcs& cmd_new_options::
  vcs ()
  {
    return this->vcs_;
  }

  inline void cmd_new_options::
  vcs (const cmd_new_vcs& x)
  {
    this->vcs_ = x;
  }

  inline bool cmd_new_options::
  vcs_specified () const
  {
    return this->vcs_specified_;
  }

  inline void cmd_new_options::
  vcs_specified (bool x)
  {
    this->vcs_specified_ = x;
  }

  inline const strings& cmd_new_options::
  pre_hook () const
  {
    return this->pre_hook_;
  }

  inline strings& cmd_new_options::
  pre_hook ()
  {
    return this->pre_hook_;
  }

  inline void cmd_new_options::
  pre_hook (const strings& x)
  {
    this->pre_hook_ = x;
  }

  inline bool cmd_new_options::
  pre_hook_specified () const
  {
    return this->pre_hook_specified_;
  }

  inline void cmd_new_options::
  pre_hook_specified (bool x)
  {
    this->pre_hook_specified_ = x;
  }

  inline const strings& cmd_new_options::
  post_hook () const
  {
    return this->post_hook_;
  }

  inline strings& cmd_new_options::
  post_hook ()
  {
    return this->post_hook_;
  }

  inline void cmd_new_options::
  post_hook (const strings& x)
  {
    this->post_hook_ = x;
  }

  inline bool cmd_new_options::
  post_hook_specified () const
  {
    return this->post_hook_specified_;
  }

  inline void cmd_new_options::
  post_hook_specified (bool x)
  {
    this->post_hook_specified_ = x;
  }

  inline const bool& cmd_new_options::
  no_amalgamation () const
  {
    return this->no_amalgamation_;
  }

  inline bool& cmd_new_options::
  no_amalgamation ()
  {
    return this->no_amalgamation_;
  }

  inline void cmd_new_options::
  no_amalgamation (const bool& x)
  {
    this->no_amalgamation_ = x;
  }

  inline const bool& cmd_new_options::
  no_checks () const
  {
    return this->no_checks_;
  }

  inline bool& cmd_new_options::
  no_checks ()
  {
    return this->no_checks_;
  }

  inline void cmd_new_options::
  no_checks (const bool& x)
  {
    this->no_checks_ = x;
  }

  inline const dir_path& cmd_new_options::
  config_add () const
  {
    return this->config_add_;
  }

  inline dir_path& cmd_new_options::
  config_add ()
  {
    return this->config_add_;
  }

  inline void cmd_new_options::
  config_add (const dir_path& x)
  {
    this->config_add_ = x;
  }

  inline bool cmd_new_options::
  config_add_specified () const
  {
    return this->config_add_specified_;
  }

  inline void cmd_new_options::
  config_add_specified (bool x)
  {
    this->config_add_specified_ = x;
  }

  inline const dir_path& cmd_new_options::
  config_create () const
  {
    return this->config_create_;
  }

  inline dir_path& cmd_new_options::
  config_create ()
  {
    return this->config_create_;
  }

  inline void cmd_new_options::
  config_create (const dir_path& x)
  {
    this->config_create_ = x;
  }

  inline bool cmd_new_options::
  config_create_specified () const
  {
    return this->config_create_specified_;
  }

  inline void cmd_new_options::
  config_create_specified (bool x)
  {
    this->config_create_specified_ = x;
  }
}

// Begin epilogue.
//
//
// End epilogue.
