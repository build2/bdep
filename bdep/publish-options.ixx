// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace bdep
{
  // cmd_publish_options
  //

  inline const bool& cmd_publish_options::
  yes () const
  {
    return this->yes_;
  }

  inline bool& cmd_publish_options::
  yes ()
  {
    return this->yes_;
  }

  inline void cmd_publish_options::
  yes (const bool& x)
  {
    this->yes_ = x;
  }

  inline const string& cmd_publish_options::
  control () const
  {
    return this->control_;
  }

  inline string& cmd_publish_options::
  control ()
  {
    return this->control_;
  }

  inline void cmd_publish_options::
  control (const string& x)
  {
    this->control_ = x;
  }

  inline bool cmd_publish_options::
  control_specified () const
  {
    return this->control_specified_;
  }

  inline void cmd_publish_options::
  control_specified (bool x)
  {
    this->control_specified_ = x;
  }

  inline const url& cmd_publish_options::
  repository () const
  {
    return this->repository_;
  }

  inline url& cmd_publish_options::
  repository ()
  {
    return this->repository_;
  }

  inline void cmd_publish_options::
  repository (const url& x)
  {
    this->repository_ = x;
  }

  inline bool cmd_publish_options::
  repository_specified () const
  {
    return this->repository_specified_;
  }

  inline void cmd_publish_options::
  repository_specified (bool x)
  {
    this->repository_specified_ = x;
  }

  inline const string& cmd_publish_options::
  section () const
  {
    return this->section_;
  }

  inline string& cmd_publish_options::
  section ()
  {
    return this->section_;
  }

  inline void cmd_publish_options::
  section (const string& x)
  {
    this->section_ = x;
  }

  inline bool cmd_publish_options::
  section_specified () const
  {
    return this->section_specified_;
  }

  inline void cmd_publish_options::
  section_specified (bool x)
  {
    this->section_specified_ = x;
  }

  inline const string& cmd_publish_options::
  author_name () const
  {
    return this->author_name_;
  }

  inline string& cmd_publish_options::
  author_name ()
  {
    return this->author_name_;
  }

  inline void cmd_publish_options::
  author_name (const string& x)
  {
    this->author_name_ = x;
  }

  inline bool cmd_publish_options::
  author_name_specified () const
  {
    return this->author_name_specified_;
  }

  inline void cmd_publish_options::
  author_name_specified (bool x)
  {
    this->author_name_specified_ = x;
  }

  inline const string& cmd_publish_options::
  author_email () const
  {
    return this->author_email_;
  }

  inline string& cmd_publish_options::
  author_email ()
  {
    return this->author_email_;
  }

  inline void cmd_publish_options::
  author_email (const string& x)
  {
    this->author_email_ = x;
  }

  inline bool cmd_publish_options::
  author_email_specified () const
  {
    return this->author_email_specified_;
  }

  inline void cmd_publish_options::
  author_email_specified (bool x)
  {
    this->author_email_specified_ = x;
  }

  inline const std::set<string>& cmd_publish_options::
  force () const
  {
    return this->force_;
  }

  inline std::set<string>& cmd_publish_options::
  force ()
  {
    return this->force_;
  }

  inline void cmd_publish_options::
  force (const std::set<string>& x)
  {
    this->force_ = x;
  }

  inline bool cmd_publish_options::
  force_specified () const
  {
    return this->force_specified_;
  }

  inline void cmd_publish_options::
  force_specified (bool x)
  {
    this->force_specified_ = x;
  }

  inline const string& cmd_publish_options::
  simulate () const
  {
    return this->simulate_;
  }

  inline string& cmd_publish_options::
  simulate ()
  {
    return this->simulate_;
  }

  inline void cmd_publish_options::
  simulate (const string& x)
  {
    this->simulate_ = x;
  }

  inline bool cmd_publish_options::
  simulate_specified () const
  {
    return this->simulate_specified_;
  }

  inline void cmd_publish_options::
  simulate_specified (bool x)
  {
    this->simulate_specified_ = x;
  }

  inline const bool& cmd_publish_options::
  forward () const
  {
    return this->forward_;
  }

  inline bool& cmd_publish_options::
  forward ()
  {
    return this->forward_;
  }

  inline void cmd_publish_options::
  forward (const bool& x)
  {
    this->forward_ = x;
  }
}

// Begin epilogue.
//
//
// End epilogue.
